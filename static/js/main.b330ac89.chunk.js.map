{"version":3,"sources":["components/TodoForm.js","components/Todo.js","components/TodoList.js","App.js","index.js"],"names":["TodoForm","props","useState","edit","value","input","setInput","inputRef","useRef","useEffect","current","focus","todoHandler","e","target","submitHandler","preventDefault","onAddedTodo","id","Math","floor","random","text","className","onSubmit","type","placeholder","onChange","name","ref","Todo","todos","completeTodo","removeTodo","updateTodo","setEdit","map","todo","index","isComplete","onClick","TodoList","setTodos","test","newTodos","console","log","todoId","newValue","prev","item","updatedTodos","removeArr","filter","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.b330ac89.chunk.js","sourcesContent":["import { useState, useRef, useEffect } from 'react';\r\nconst TodoForm = (props) => {\r\n\tconst [ input, setInput ] = useState(props.edit ? props.edit.value : '');\r\nconst inputRef= useRef(null);\r\n\r\nuseEffect(()=>{\r\n\tinputRef.current.focus();\r\n},[inputRef])\r\n\tconst todoHandler = (e) => {\r\n\t\tsetInput(e.target.value);\r\n\t};\r\n\tconst submitHandler = (e) => {\r\n\t\te.preventDefault();\r\n\t\tprops.onAddedTodo({\r\n\t\t\tid: Math.floor(Math.random() * 10000),\r\n\t\t\ttext: input\r\n\t\t});\r\n\t\tsetInput('');\r\n\t};\r\n\treturn (\r\n\t\t<form className=\"todo-form\" onSubmit={submitHandler}>\r\n      {props.edit ? (\r\n        <>\r\n\t\t\t\t<input\r\n\t\t\t\ttype=\"text\"\r\n\t\t\t\tplaceholder=\"add todo\"\r\n\t\t\t\tvalue={input}\r\n\t\t\t\tonChange={todoHandler}\r\n\t\t\t\tname=\"text\"\r\n\t\t\t\tclassName=\"todo-input edit\"\r\n\t\t\t\tref={inputRef}\r\n\t\t\t/>\r\n\t\t\t<button onSubmit={submitHandler} className=\"todo-button\">\r\n\t\t\t\tAdd todo\r\n\t\t\t</button>\r\n\t\t\t\t</>\r\n      ) : (\r\n\t\t\t\t<>\r\n\t\t\t\t<input\r\n\t\t\t\ttype=\"text\"\r\n\t\t\t\tplaceholder=\"add todo\"\r\n\t\t\t\tvalue={input}\r\n\t\t\t\tonChange={todoHandler}\r\n\t\t\t\tname=\"text\"\r\n\t\t\t\tclassName=\"todo-input\"\r\n\t\t\t\tref={inputRef}\r\n\t\t\t/>\r\n\t\t\t<button onSubmit={submitHandler} className=\"todo-button\">\r\n\t\t\t\tAdd todo\r\n\t\t\t</button></>\r\n\t\t\t)}\r\n\t\t\t\r\n\t\t</form>\r\n\t);\r\n};\r\n\r\nexport default TodoForm;\r\n","import React, { useState } from 'react';\r\nimport TodoForm from './TodoForm';\r\nimport { RiCloseCircleLine } from 'react-icons/ri';\r\nimport { TiEdit } from 'react-icons/ti';\r\n\r\nconst Todo = ({ todos, completeTodo, removeTodo, updateTodo }) => {\r\n\tconst [ edit, setEdit ] = useState({\r\n\t\tid: null,\r\n\t\tvalue: ''\r\n\t});\r\n\r\n\tconst submitUpdate = (value) => {\r\n\t\tupdateTodo(edit.id, value);\r\n\t\tsetEdit({\r\n\t\t\tid: null,\r\n\t\t\tvalue: ''\r\n\t\t});\r\n\t};\r\n\r\n\tif (edit.id) {\r\n\t\treturn <TodoForm edit={edit} onAddedTodo={submitUpdate} />;\r\n\t}\r\n\r\n\treturn todos.map((todo, index) => (\r\n\t\t<div className={todo.isComplete ? 'todo-row complete' : 'todo-row'} key={index}>\r\n\t\t\t<div key={todo.id} onClick={() => completeTodo(todo.id)}>\r\n\t\t\t\t{todo.text}\r\n\t\t\t</div>\r\n\t\t\t<div className=\"icons\">\r\n\t\t\t\t<RiCloseCircleLine onClick={() => removeTodo(todo.id)} className=\"delete-icon\" />\r\n\t\t\t\t<TiEdit onClick={() => setEdit({ id: todo.id, value: todo.text })} className=\"edit-icon\" />\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t));\r\n};\r\n\r\nexport default Todo;\r\n","import React, {useState} from 'react';\r\nimport Todo from './Todo';\r\nimport TodoForm from './TodoForm';\r\nfunction TodoList() {\r\n\tconst [ todos, setTodos ] = useState([]);\r\n\r\n  const addTodo = (todo) => {\r\n    if(!todo.text || /^\\s*$/.test(todo.text)){\r\n      return;\r\n    }\r\n    \r\n\r\n    const newTodos = [...todos, todo];\r\n    setTodos(newTodos);\r\n    console.log(todo);\r\n  }\r\n\r\n  const updateTodo = (todoId, newValue) =>{\r\n    if(!newValue.text || /^\\s*$/.test(newValue.text)){\r\n      return;\r\n    }\r\n    setTodos(prev => prev.map(item => item.id === todoId ? item.text = newValue : item));\r\n    \r\n  }\r\n\r\n  const removeTodo = id =>{\r\n    const removeArr = [...todos].filter(todo => todo.id !== id);\r\n\r\n    setTodos(removeArr);\r\n  }\r\n\r\n  \r\n\r\n  const completeTodo = id => {\r\n    let updatedTodos = todos.map(todo => {\r\n      if (todo.id === id) {\r\n        todo.isComplete = !todo.isComplete;\r\n      }\r\n      return todo;\r\n    });\r\n    setTodos(updatedTodos);\r\n  };\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<h2>What's the plan Today</h2>\r\n\t\t\t<TodoForm onAddedTodo={addTodo}/>\r\n      <Todo todos={todos} updateTodo={updateTodo} completeTodo={completeTodo} removeTodo={removeTodo}/>\r\n\t\t</>\r\n\t);\r\n}\r\n\r\nexport default TodoList;\r\n","import './App.css';\r\n\r\nimport TodoList from './components/TodoList';\r\n\r\nconst App = () => {\r\n\treturn (\r\n\t\t<div className=\"todo-app\">\r\n\t\t\t<h1>React todo list</h1>\r\n\r\n\t\t\t<TodoList />\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n\t<React.StrictMode>\r\n\t\t<App />\r\n\t</React.StrictMode>,\r\n\tdocument.getElementById('root')\r\n);\r\n"],"sourceRoot":""}